# Generated by Django 5.1.8 on 2025-04-11 16:28

import django.contrib.postgres.fields
import django.db.models.deletion
import ipam.fields
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dcim', '0200_populate_mac_addresses'),
        ('extras', '0123_journalentry_kind_default'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressBookAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=64)),
                ('address', ipam.fields.IPNetworkField()),
                ('is_global', models.BooleanField(default=False)),
                ('comments', models.TextField(blank=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcim.device')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'ordering': ['device', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SecurityZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=64)),
                ('host_inbound_traffic_protocols', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=512), blank=True, default=list, size=None)),
                ('host_inbound_traffic_services', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=512), blank=True, default=list, size=None)),
                ('application_tracking', models.BooleanField(default=False)),
                ('enable_reverse_reroute', models.BooleanField(default=False)),
                ('tcp_rst', models.BooleanField(default=False)),
                ('unidirectional_session_refreshing', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=256)),
                ('comments', models.TextField(blank=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcim.device')),
                ('interfaces', models.ManyToManyField(blank=True, related_name='security_zone_interfaces', to='dcim.interface')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Security Zone',
                'verbose_name_plural': 'Security Zones',
                'ordering': ['device', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AddressBookAddressSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=64)),
                ('is_global', models.BooleanField(default=False)),
                ('comments', models.TextField(blank=True)),
                ('address', models.ManyToManyField(to='netbox_juniper.addressbookaddress')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcim.device')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('security_zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='netbox_juniper.securityzone')),
            ],
            options={
                'verbose_name': 'Address Set',
                'verbose_name_plural': 'Address Sets',
                'ordering': ['device', 'name'],
            },
        ),
        migrations.AddField(
            model_name='addressbookaddress',
            name='security_zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='netbox_juniper.securityzone'),
        ),
        migrations.CreateModel(
            name='FirewallFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=64)),
                ('family', models.CharField(max_length=20)),
                ('comments', models.TextField(blank=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcim.device')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Firewall Filter',
                'verbose_name_plural': 'Firewall Filters',
                'ordering': ['device', 'name'],
                'indexes': [models.Index(fields=['name'], name='idx_firewall_filter_name')],
                'constraints': [models.UniqueConstraint(fields=('device', 'name'), name='unique_firewall_filter')],
            },
        ),
        migrations.CreateModel(
            name='FirewallPolicer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=64)),
                ('bw_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('bw_percent', models.PositiveIntegerField(blank=True, null=True)),
                ('burst_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('filter_specific', models.BooleanField(default=False)),
                ('action', models.CharField(max_length=20)),
                ('comments', models.TextField(blank=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcim.device')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Firewall Policer',
                'verbose_name_plural': 'Firewall Policers',
                'ordering': ['device', 'name'],
                'indexes': [models.Index(fields=['name'], name='idx_firewall_policer_name')],
                'constraints': [models.UniqueConstraint(fields=('device', 'name'), name='unique_firewall_policer')],
            },
        ),
        migrations.AddIndex(
            model_name='securityzone',
            index=models.Index(fields=['name'], name='idx_security_zone_name'),
        ),
        migrations.AddConstraint(
            model_name='securityzone',
            constraint=models.UniqueConstraint(fields=('device', 'name'), name='unique_security_zone'),
        ),
        migrations.AddIndex(
            model_name='addressbookaddressset',
            index=models.Index(fields=['device', 'name'], name='idx_security_address_set'),
        ),
        migrations.AddConstraint(
            model_name='addressbookaddressset',
            constraint=models.UniqueConstraint(fields=('device', 'name', 'is_global', 'security_zone'), name='unique_security_addressbook_address_set'),
        ),
        migrations.AddIndex(
            model_name='addressbookaddress',
            index=models.Index(fields=['device', 'name'], name='idx_security_adressbook'),
        ),
        migrations.AddConstraint(
            model_name='addressbookaddress',
            constraint=models.UniqueConstraint(fields=('device', 'name', 'is_global', 'security_zone'), name='unique_security_addressbook_address'),
        ),
    ]
